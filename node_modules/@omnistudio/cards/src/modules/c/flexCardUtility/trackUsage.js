/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { logUsageEvents } from "c/flexCardUtils";

let trackerArray = [];

const debounceHandler =  debounce(() => {
    trackUsageLogger([...trackerArray]);
    trackerArray = [];
}, 1000);

function trackUsage(trackObj) {
    trackerArray.push(trackObj);
    debounceHandler();
}

async function trackUsageLogger(trackList) {
    logUsageEvents({trackEvents : trackList});
}

function debounce(func, waitTime, immediateTrigger) {
	let timeout;
	return function() {
		let context = this, args = arguments;
		let laterFunc = function() {
			timeout = null;
			if (!immediateTrigger) func.apply(context, args);
		};
		let callNow = immediateTrigger && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(laterFunc, waitTime);
		if (callNow) func.apply(context, args);
	};
}

export { trackUsage }