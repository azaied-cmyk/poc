/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { getTooltips } from "./carddesignerUtility";

function getHelpPageForElement(elementName, isHelpPanel, isStateCondition) {
  let helpPage;
  switch (elementName) {
    case "RecursiveChildCard":
      helpPage = "Add-a-Child-FlexCard-to-Itself-Recursively.html";
      break;
    case "CondtionalStyles":
      helpPage = isHelpPanel
        ? "Add-Conditional-Styles-to-an-Element.html"
        : "FlexCards-Conditional-Style-Properties.html";
      break;
    case "SetupFlexcard":
      helpPage = isHelpPanel
        ? "Repeat-Options-in-the-FlexCard-Designer.html"
        : "FlexCard-Setup-Reference.html";
      break;
    case "OmniscriptSupport":
      helpPage = "Enable-OmniScript-Support-on-a-FlexCard.html";
      break;
    case "TrackCustomData":
      helpPage = "Track-Custom-Data-on-a-FlexCard.html";
      break;
    case "RepeatRecords":
      helpPage = "Disable-Record-Looping-on-a-FlexCard.html";
      break;
    case "RequiredPermission":
      helpPage = "Limit-User-Access-to-a-FlexCard.html";
      break;
    case "SessionVariables":
      helpPage = "Add-Session-Variables-to-a-FlexCard.html";
      break;
    case "SetupEventListener":
      helpPage = "Add-an-Event-Listener-to-a-FlexCard.html";
      break;
    case "DataSource":
      helpPage = "Configure-a-Data-Source-on-a-FlexCard.html";
      break;
    case "CustomJSON":
      helpPage = "Configure-a-Custom-Data-Source-on-a-FlexCard.html";
      break;
    case "Field":
      helpPage = isHelpPanel
        ? "Add-a-Field-to-a-FlexCard.html"
        : "FlexCard-Field-Properties.html";
      break;
    case "Text":
      helpPage = isHelpPanel
        ? "Add-a-Text-Element-to-a-FlexCard.html"
        : "FlexCard-Text-Properties.html";
      break;
    case "Menu":
      helpPage = isHelpPanel
        ? "Add-a-Menu-to-a-FlexCard.html"
        : "FlexCard-Menu-Properties.html";
      break;
    case "Action":
      helpPage = isHelpPanel
        ? "Add-an-Action-to-a-FlexCard.html"
        : "FlexCard-Action-Properties.html";
      break;
    case "Icon":
      helpPage = isHelpPanel
        ? "Add-an-Icon-to-a-FlexCard.html"
        : "FlexCard-Icon-Properties.html";
      break;
    case "Datatable":
      helpPage = isHelpPanel
        ? "Add-a-Datatable-to-a-FlexCard.html"
        : "FlexCard-Datatable-Properties.html";
      break;
    case "List":
      helpPage = isHelpPanel
        ? "Add-a-List-to-a-Flex-Card.html"
        : "Add-a-List-to-a-Flex-Card.html";
      break;
    case "Chart":
      helpPage = isHelpPanel
        ? "Add-a-Chart-to-a-FlexCard.html"
        : "FlexCard-Chart-Properties.html";
      break;
    case "State":
      helpPage = isHelpPanel
        ? "Add-a-State-to-a-FlexCard.html"
        : "FlexCard-State-Properties.html";
      break;
    case "Block":
      helpPage = isHelpPanel
        ? "Group-Elements-Inside-a-Block-on-a-FlexCard.html"
        : "FlexCard-Block-Properties.html";
      break;
    case "Custom LWC":
      helpPage = isHelpPanel
        ? "Embed-a-Custom-LWC-Inside-a-FlexCard.html"
        : "FlexCard-Custom-LWC-Properties.html";
      break;
    case "Image":
      helpPage = isHelpPanel
        ? "Add-an-Image-to-a-FlexCard.html"
        : "FlexCard-Image-Properties.html";
      break;
    case "FlexCard":
      helpPage = isHelpPanel
        ? "Embed-a-Child-Card-Inside-a-FlexCard-State.html"
        : "FlexCard-Child-Card-Properties.html";
      break;
    case "Toggle":
      helpPage = isHelpPanel
        ? "Trigger-Actions-with-the-Toggle-Element-on-a-FlexCard.html"
        : "FlexCard-Toggle-Properties.html";
      break;
    case "AddAction":
      helpPage = "Add-a-Click-Event-Action-to-a-FlexCard-Element.html";
      break;
    case "Conditions":
      helpPage = isStateCondition
        ? "Add-Conditions-to-a-FlexCard-State.html"
        : "Add-Conditions-to-a-FlexCard-Element.html";
      break;
    case "PreloadConditionalComponent":
      helpPage = "Disable-Preload-on-Conditional-Elements.html";
      break;
    case "CloneCard":
      helpPage = "FlexCards-Clone-Properties.html";
      break;
    case "EventListener":
      helpPage = "FlexCards-Event-Listener-Properties.html";
      break;
    case "Element":
      helpPage = "FlexCards-Common-Element-Properties.html";
      break;
    case "ConditionModal":
      helpPage = "FlexCards-Conditions-Properties.html";
      break;
    case "CustomCSS":
      helpPage = "FlexCards-Add-Custom-CSS-Properties.html";
      break;
    case "Publish":
      helpPage = "FlexCards-Publish-Options-Properties.html";
      break;
    case "Appearance":
      helpPage = "FlexCards-Element-Appearance-Properties.html";
      break;
    case "Dimensions":
      helpPage = "FlexCards-Element-Dimensions-Properties.html";
      break;
    case "Alignment":
      helpPage = "FlexCards-Element-Alignment-Properties.html";
      break;
    case "CustomCSS-stylepanel":
      helpPage = isHelpPanel
        ? "FlexCards-Element-Custom-CSS.html"
        : "FlexCards-Custom-CSS-Properties.html";
      break;
    case "CustomStyles":
      helpPage = isHelpPanel
        ? "Create-a-Custom-Style-for-a-FlexCard-Element.html"
        : "FlexCards-Custom-Styles-Properties.html";
      break;
    case "Responsive":
      helpPage = "FlexCards-Element-Responsiveness.html";
      break;
    case "Action-stylepanel":
      helpPage = "FlexCards-Action-Style-Properties.html";
      break;
    case "Toggle-stylepanel":
      helpPage = "FlexCards-Toggle-Style-Properties.html";
      break;
    case "Datatable-stylepanel":
      helpPage = "FlexCards-Datatable-Style-Properties.html";
      break;
    case "Field-stylepanel":
      helpPage = "FlexCards-Field-Style-Properties.html";
      break;
    case "Icon-stylepanel":
      helpPage = "FlexCards-Icon-Style-Properties.html";
      break;
    case "Menu-stylepanel":
      helpPage = "FlexCards-Menu-Style-Properties.html";
      break;
    case "CloneProperties":
      helpPage = "FlexCards-Clone-Properties.html";
      break;
    case "DatasourceProperties":
      helpPage = "FlexCards-Data-Source-Properties.html";
      break;
    case "Block-stylepanel":
      helpPage = "FlexCards-Block-Style-Properties.html";
      break;
    case "Chart-stylepanel":
      helpPage = "FlexCards-Chart-Style-Properties.html";
      break;
    case "FlexCardStyleOption":
      helpPage =
        "Overwrite-Global-Newport-and-Lightning-Styles-for-a-FlexCard.html";
      break;
    case "ExposedAttriutes":
      helpPage = "Create-Public-Properties-for-a-FlexCard.html";
      break;
    //Input Elements Help Page
    case "CheckboxInput":
      helpPage = "Add-a-Checkbox-Input-Element-to-a-FlexCard.html";
      break;
    case "CurrencyInput":
      helpPage = "Add-a-Currency-Input-Element-to-a-FlexCard.html";
      break;
    case "DateTimeInput":
      helpPage = "Add-a-Date-Time-Input-Element-to-a-FlexCard.html";
      break;
    case "DateInput":
      helpPage = "Add-a-Date-Input-Element-to-a-FlexCard.html";
      break;
    case "EmailInput":
      helpPage = "Add-an-Email-Input-Element-to-a-FlexCard.html";
      break;
    case "MultiSelectInput":
      helpPage = isHelpPanel
        ? "Add-a-Multi-Select-Input-Element-to-a-FlexCard.html"
        : "FlexCards-Multi-Select-Input-Properties.html";
      break;
    case "NumberInput":
      helpPage = "Add-a-Number-Input-Element-to-a-FlexCard.html";
      break;
    case "RadioInput":
      helpPage = isHelpPanel
        ? "Add-a-Radio-Input-Element-to-a-FlexCard.html"
        : "FlexCards-Radio-Input-Properties.html";
      break;
    case "RangeInput":
      helpPage = "Add-a-Range-Input-Element-to-a-FlexCard.html";
      break;
    case "SelectInput":
      helpPage = "Add-a-Select-Input-Element-to-a-FlexCard.html";
      break;
    case "TelephoneInput":
      helpPage = "Add-a-Telephone-Input-Element-to-a-FlexCard.html";
      break;
    case "TextInput":
      helpPage = "Add-a-Text-Input-Element-to-a-FlexCard.html";
      break;
    case "TextAreaInput":
      helpPage = "Add-a-Text-Area-Input-Element-to-a-FlexCard.html";
      break;
    case "TimeInput":
      helpPage = "Add-a-Time-Input-Element-to-a-FlexCard.html";
      break;
    case "TypeaheadInput":
      helpPage = "Add-a-Typeahead-Input-Element-to-a-FlexCard.html";
      break;
    default:
      helpPage = isHelpPanel
        ? "Add-a-Field-to-a-FlexCard.html"
        : "FlexCard-Field-Properties.html";
  }

  return helpPage;
}

function getTooltipsForElement(pageName) {
  return getTooltips(pageName);
}

export { getHelpPageForElement, getTooltipsForElement };
