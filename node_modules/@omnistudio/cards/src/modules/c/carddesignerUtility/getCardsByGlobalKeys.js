/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { getCardsByGlobalKeys } from "c/flexCardUtils";

let _cardData = [];
let getCardsPromise = {};

function getCardsByKeys(keys) {
  let nonExistingKey = [];
  keys.forEach(key => {
    if (!_cardData[key]) {
      nonExistingKey.push(key);
    }
  });

  if (nonExistingKey.length > 0) {
    getCardsPromise = new Promise(resolve => {
      getCardsByGlobalKeys({ keys: nonExistingKey }).then(data => {
        let cards = [];
        nonExistingKey.forEach((key, index) => {
          _cardData[key] = data[index];
        });

        keys.forEach(key => {
          cards.push(_cardData[key]);
        });

        resolve(cards);
      });
    });
  } else {
    getCardsPromise = new Promise(resolve => {
      let cards = [];
      keys.forEach(key => {
        cards.push(_cardData[key]);
      });
      resolve(cards);
    });
  }

  return getCardsPromise;
}

function setCardData(key, data) {
  _cardData[key] = data;
}

export { getCardsByKeys, setCardData };
