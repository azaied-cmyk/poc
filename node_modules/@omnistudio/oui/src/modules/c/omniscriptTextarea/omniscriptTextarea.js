/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
/**
 * @module ns/OmniscriptTextarea
 * @description This component is used to render a Textarea Element, OmniscriptTextarea is extended from `OmniscriptAtomicElement`.
 */
import OmniscriptAtomicElement from 'c/omniscriptAtomicElement';
import tmpl from './omniscriptTextarea.html';

/**
 * Default exported class OmniscriptTextarea.
 * @extends OmniscriptAtomicElement
 * @typicalname OmniscriptTextarea
 */
export default class OmniscriptTextarea extends OmniscriptAtomicElement {
    /**
     * @type {Boolean}
     * @scope private
     */
    _commitOnChange;

    /**
     * Event handler function on blur event.
     * Sets the element value and triggers aggregation
     * @returns {void}
     * @scope private
     */
    handleBlur(evt) {
        // update elementValue, then aggregate
        this.applyCallResp(evt.target.value);
    }

    /**
     * @description Overwrites inherited initCompVariables.
     * @returns {Void}
     * @scope private
     */
    initCompVariables() {
        super.initCompVariables();
        this._commitOnChange = this.scriptHeaderDef.propSetMap.commitOnChange === true;
    }

    /**
     * @scope private
     * @description Overwrites the native LWC render.
     * @returns {Template}
     */
    render() {
        return tmpl;
    }
}
