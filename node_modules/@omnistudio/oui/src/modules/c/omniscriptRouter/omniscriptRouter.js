/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { api } from 'lwc';
import Router from 'c/router';

/**
 * The omniscript-router component can be used in off-platform scenarios where the author would like to build a
 * Single Page Application (SPA). The omniscript-router component extends the router component and behaves exactly the same.
 * The difference is the omniscript-router component exposes pass-thru attributes that map to the compiled OmniScript's attributes.
 *
 * NOTE: Components loaded by the omniscript-router component must expose the attributes detailed here,
 * otherwise a compile time error will be thrown.
 *
 * NOTE: The router component may NOT be used on the salesforce platform
 * due to the lack of support for the `lwc:dynamic` directive.
 *
 * @example
 * ``` HTML
 * <ns-omniscript-router
 *     route-config={routeConfig}
 *     redirects={redirects}
 *      >
 * </ns-omniscript-router
 * ```
 * ```JS
 * routeConfig = new Map([
 *    ['/', { title: 'Home', load: () => import('vlocityomniscript/typeSubtypeOneSpanish') }],
 *    ['/', { title: 'About Us', load: () => import('vlocityomniscript/typeSubtypeTwoFrench')]
 *    ['*', { title: '404', load: () => import('cmp/notFound') }]
 * ]);
 *
 * redirects = new Map();
 *
 * // Make sure to `import { normalizeParams, parseParams } from 'ns/navigationUtils';` at the top of your js file.
 * get params() {
 *  return normalizeParams(parseParams(window.location.search));
 * }
 * ```
 *
 * @module ns/omniscriptRouter
 * @typicalName OmniscriptRouter
 * @extends Router
 */
export default class OmniscriptRouter extends Router {
    /**
     * Pass-thru attribute. A jsForce Connection Object.
     * @type {Object}
     */
    @api connection;

    /**
     * Pass-thru attribute. Contains the direction of the language which is affected by the css.
     * LTR = Left-to-Right
     * RTL = Right-to-Left
     * @type {'LTR' | 'RTL'}
     */
    @api dir;

    /**
     * Pass-thru attribute. If true, the omniscript will initially render in a collapsed state, and return to this state when complete.
     * @type {boolean}
     */
    @api inline = false;

    /**
     * Pass-thru attribute. Label rendered on inline launcher button.
     * @type {string}
     */
    @api inlineLabel = 'Launch OmniScript';

    /**
     * Pass-thru attribute. Style of button that the inline launcher button will be rendered as. Set via app/page/community builder.
     * @type {string}
     */
    @api inlineVariant = 'brand';

    /**
     * Pass-thru attribute. Specify the layout used by the omniscript, 'lightning' or 'newport', defaults to 'lightning'.
     * @type {'lightning' | 'newport'}
     */
    @api layout;

    /**
     * Pass-thru attribute. Pass prefill values to the rendered omniscript.
     * @type {Object}
     */
    @api prefill;

    /**
     * Pass-thru attribute. Set the omniscript run-mode, pass 'localScriptDef' load your script definition from you local asset.
     * Leave runMode undefined to retrieve the definition from the connected org. Defaults to undefined.
     * @type {'localScriptDef'}
     */
    @api runMode;
}
