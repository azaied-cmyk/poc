/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
/**
 * @module ns/omniscriptRange
 * @description This component is used to render Range
 */
import OmniscriptAtomicElement from 'c/omniscriptAtomicElement';
import tmpl from './omniscriptRange.html';

/**
 * @class OmniscriptRange
 * @extends OmniscriptAtomicElement
 * @typicalname OmniscriptRange
 */
export default class OmniscriptRange extends OmniscriptAtomicElement {
    get defaultValue() {
        const dfltValue = super.defaultValue;
        const propSetDefault = dfltValue != null ? dfltValue : undefined;
        if (propSetDefault != null && this.shouldNullify(propSetDefault)) {
            return this.nullVal;
        }
        return propSetDefault != null ? propSetDefault : this.nullVal;
    }

    get nullVal() {
        return typeof this._propSetMap.rangeLow === 'string' ? this.safeParseStyleToNumber(this._propSetMap.rangeLow) : this._propSetMap.rangeLow;
    }

    handleChange() {
        this.applyCallResp(this.childInput.value);
    }

    handleTouchMove(event) {
        event.stopPropagation();
    }

    shouldNullify(val) {
        return val == null || val < this._propSetMap.rangeLow || val > this._propSetMap.rangeHigh;
    }

    validateData(data) {
        // default - Number
        return {
            valid: (typeof data === 'number' && data >= this._propSetMap.rangeLow && data <= this._propSetMap.rangeHigh) || data === null,
            dataToApply: data,
        };
    }

    /**
     * Overwrites the inherited initCompVariables from OmniscriptAtomicElement. Initializes any masks that are present.
     * @returns {void}
     */
    initCompVariables() {
        super.initCompVariables();
        this._imaskAttributes = this.getImaskNumberAttributes();
    }

    applyRepeatableStyles() {
        const prefix = this._theme;
        this._styleClasses.container = prefix + '-grid';

        if (this.jsonDef && this._propSetMap && this._propSetMap.repeat) {
            this._styleClasses.repeatRemove = `${prefix}-button_reset `;
            this._styleClasses.repeatAdd = `${this._styleClasses.repeatRemove} ${prefix}-m-right_x-small `;
            this._styleClasses.repeatIcons = `${prefix}-button__icon ${prefix}-button__icon_small `;
            this._styleClasses.repeatContainer = 'omni-repeat-button-group ';

            if (this.layout === 'newport') {
                this._styleClasses.repeatContainer += 'nds-m-left_x-small';
            } else {
                this._styleClasses.repeatContainer += 'slds-button-group slds-p-right_x-small';
                this._styleClasses.repeatIcons += `${prefix}-m-bottom_xxx-small `;
            }
        }
    }

    render() {
        return tmpl;
    }
}
