/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from 'lwc';
import { delay } from 'c/asyncUtils';
import pubsub from 'c/pubsub';

import OmniscriptStep from 'c/omniscriptStep';

describe('c-omniscript-step', () => {
    const jsonDef = require('./jsonDef.json');
    let step = null;
    beforeEach(() => {
        step = createElement('c-omniscript-step', {
            is: OmniscriptStep,
        });
        step.jsonDef = jsonDef;
        step.layout = 'lightning';
        step.scriptHeaderDef = {
            allCustomLabels: {
                OmniStepHideDetails: 'Hide Details',
                OmniStepShowDetails: 'Show Details',
                OmniStepCloseDetails: 'Close Details',
            },
            kbIndex: 1,
            omniscriptKey: 'omniscriptKey',
            propSetMap: {
                persistentComponent: [],
                showPersistentComponent: [true, true],
            },
        };
    });
    afterEach(() => {
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });
    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('can render', async () => {
        document.body.appendChild(step);
        expect(step.shadowRoot.children).not.toHaveLength(0);
    });
    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('can render a knowledge base article', async () => {
        document.body.appendChild(step);
        pubsub.fire('omniscriptKeyomnikbarticlebodyresult', 'data', {
            articleBody: 'article<br/><hr/>body',
            articleTitle: 'article title',
            articleLink: '/link/to/article',
            setFocusToArticle: true,
        });
        await delay(0);
        expect(step.shadowRoot.querySelector('h3.vlc-slds-knowledge--header a').textContent).toBe('article title');
    });
    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('can expand and collapse a knowledge base article', async () => {
        document.body.appendChild(step);
        pubsub.fire('omniscriptKeyomnikbarticlebodyresult', 'data', {
            articleBody: 'article<br/><hr/>body',
            articleTitle: 'article title',
            articleLink: '/link/to/article',
            setFocusToArticle: true,
        });
        await delay(0);
        const toggle = step.shadowRoot.querySelector('h3.vlc-slds-knowledge--header button');
        expect(toggle.getAttribute('aria-expanded')).toBe('true');

        toggle.click();
        await delay(0);
        expect(toggle.getAttribute('aria-expanded')).toBe('false');

        toggle.click();
        await delay(0);
        expect(toggle.getAttribute('aria-expanded')).toBe('true');
    });
});
