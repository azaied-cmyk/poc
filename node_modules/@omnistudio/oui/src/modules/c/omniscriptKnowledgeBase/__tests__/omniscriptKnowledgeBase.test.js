/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from 'lwc';
import omniscriptKnowledgeBase from 'c/omniscriptKnowledgeBase';
import { delay } from 'c/asyncUtils';
import pubsub from 'c/pubsub';

jest.mock(
    '@salesforce/label/c.OmniScriptOpenFormatted',
    () => {
        return {
            default: 'Open "{0}" in OmniScript',
        };
    },
    { virtual: true },
);

jest.mock(
    '@salesforce/label/c.OmniScriptModalFormatted',
    () => {
        return {
            default: 'Open "{0}" in modal dialog',
        };
    },
    { virtual: true },
);

jest.mock(
    '@salesforce/label/c.OmniKnowledgeArticlesCount',
    () => {
        return {
            default: '{0} articles found',
        };
    },
    { virtual: true },
);

jest.mock('c/omniscriptActionUtils', () => ({
    OmniscriptActionCommonUtil: function() {
        return {
            executeAction: () =>
                Promise.resolve({
                    result: {
                        vlcKnowledge: {
                            knowledgeItems: [
                                {
                                    urlName: 'how-to-drive-a-car',
                                    title: 'How to Drive a Car',
                                    summary: null,
                                    lastPubDate: '3/18/2021 10:16 AM',
                                    displayType: 'FAQ',
                                    aType: 'omnistudio__Knowledge',
                                    articleType: 'FAQ',
                                    articleId: 'ka0xx00000000CvAAI',
                                },
                                {
                                    urlName: 'how-to-ride-a-motorcycle',
                                    title: 'How to Ride a Motorcycle',
                                    summary: 'The quick brown fox jumps over the lazy dog',
                                    lastPubDate: '3/17/2021 2:42 PM',
                                    displayType: 'FAQ',
                                    aType: 'omnistudio__Knowledge',
                                    articleType: 'FAQ',
                                    articleId: 'ka0xx000000009hAAA',
                                },
                                {
                                    urlName: 'how-to-drive-a-truck',
                                    title: 'How to Drive a Truck',
                                    summary: 'The quick brown fox jumps over the lazy dog',
                                    lastPubDate: '3/17/2021 2:42 PM',
                                    displayType: 'FAQ',
                                    aType: 'omnistudio__Knowledge',
                                    articleType: 'FAQ',
                                    articleId: 'ka0xx00000000BJAAY',
                                },
                            ],
                        },
                        error: 'OK',
                    },
                }),
        };
    },
}));

describe('c-omniscript-knowledgebase', () => {
    let kb = null;
    const options = require('./options.json');
    const enterKey = new CustomEvent('keypress');
    enterKey.key = 'Enter';
    enterKey.keyCode = 13;

    // eslint-disable-next-line @lwc/lwc/no-async-await
    beforeEach(async () => {
        kb = createElement('c-omniscript-knowledgebase', {
            is: omniscriptKnowledgeBase,
        });
        kb.layout = 'lightning';
        kb.setAttribute('data-omni-key', 'omniscriptKnowledgeBase');
        document.body.appendChild(kb);
        await delay(0);
        pubsub.fire('omnikboptionschange', 'data', options);
        await delay(0);
    });

    afterEach(() => {
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('can render in lightning', async () => {
        expect(kb.shadowRoot.children).not.toHaveLength(0);
        expect(kb.shadowRoot.querySelector('.vlc-slds-knowledge-component')).toBeTruthy();
    });

    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('can fetch and show a list of articles', async () => {
        const input = kb.shadowRoot.querySelector('c-input');
        input.value = 'search query';
        input.dispatchEvent(enterKey);
        await delay(0);

        const items = kb.shadowRoot.querySelectorAll('ul.vlc-slds-knowledge-item li');

        expect(items).toHaveLength(3);
        expect(kb.shadowRoot.querySelector('[data-article-count]').textContent).toBe('3 articles found');
    });

    // eslint-disable-next-line @lwc/lwc/no-async-await
    it('should render an article title in each button', async () => {
        const input = kb.shadowRoot.querySelector('c-input');
        input.value = 'search query';
        input.dispatchEvent(enterKey);
        await delay(0);

        const items = kb.shadowRoot.querySelectorAll('ul.vlc-slds-knowledge-item li');
        const buttons = items[0].querySelectorAll('button');
        const [inlineButton, modalButton] = buttons;

        expect(buttons).toHaveLength(2);
        expect(inlineButton.getAttribute('aria-label')).toBe('Open "How to Drive a Car" in OmniScript');
        expect(modalButton.getAttribute('aria-label')).toBe('Open "How to Drive a Car" in modal dialog');
    });
});
