/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v109.0.0
 */
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const inputableNode = /input|select|textarea|button|object/;

function visible(element) {
    const { width, height } = element.getBoundingClientRect();
    const noZeroSize = width > 0 || height > 0;
    return (
        noZeroSize && window.getComputedStyle(element).visibility !== 'hidden'
    );
}

function focusable(element) {
    const nodeName = element.tagName.toLowerCase();
    const res =
        (inputableNode.test(nodeName) && !element.disabled) ||
        (nodeName === 'a' && element.href);

    return res && visible(element);
}

function tabbable(element) {
    const isDataActionable =
        element.getAttribute('data-navigation') === 'enable';
    const tabIndex = element.tabIndex;
    return (tabIndex >= 0 && focusable(element)) || isDataActionable;
}

export function queryFocusable(element) {
    return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);
}
