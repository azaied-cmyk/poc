/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v109.0.0
 */
function subscribe(channel, replayId, onMessageCallback) {
    return executeAPI("subscribe", {
        channel,
        replayId,
        onMessageCallback
    });
}
function unsubscribe(subscription, callback) {
    return executeAPI("unsubscribe", {
        subscription,
        callback
    });
}
function onError(callback) {
    return executeAPI("onError", {
        callback
    });
}
function setDebugFlag(flag) {
    return executeAPI("setDebugFlag", {
        flag
    });
}
function isEmpEnabled() {
    return executeAPI("isEmpEnabled", {});
}

function executeAPI(methodName, methodArgs) {
    return new Promise((resolve, reject) => {
        const apiEvent = new CustomEvent("internalapievent", {
            bubbles: true,
            composed: true,
            cancelable: false,
            detail: {
                category: "empApi",
                methodName,
                methodArgs,
                callback: (err, response) => {
                    if (err) {
                        return reject(err);
                    }

                    return resolve(response);
                }
            }
        });
        window.dispatchEvent(apiEvent);
    });
}

export { subscribe, unsubscribe, onError, setDebugFlag, isEmpEnabled }