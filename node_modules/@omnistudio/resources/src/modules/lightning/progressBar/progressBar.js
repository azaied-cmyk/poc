/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v109.0.0
 */
import { LightningElement, api, track } from 'lwc';

export default class ProgressBar extends LightningElement {

    _value = 10;

    /**
     * @type {String} - The size of the progress bar.
     *                  Valid values are x-small, small, medium, and large.
     *                  The default value is medium.
     * @scope private
     */
    @api size;

    /**
     * @type {Number} - Sets the value of the progress bar
     * @scope api (public)
     */
    @api set value(val) {
        this._value = !val || val < 0 ? 0 :
            (val > 100 ? 100 : val);
    }

    /**
     * @type {String} - Returns the value of the progress var
     * @scope api (public)
     */
    get value() {
        return this._value
    }

    /**
    * @type {String} - The variant changes the appearance of the progress bar.
    *                  Accepted variants include base or circular.
    *                  This value defaults to base.
    * @scope api (public)
    */
    @api variant = 'base';

    /**
    * @type {String} - The color changes the color of the progress bar.
    *                  Accepted variants include empty string or success.
    *                  This value defaults to empty.
    * @scope api (public)
    */
    @api color = '';


    /**
     * The progress styling for the progress bar
     * * @scope private
     * @returns {string}
     */
    get progressStyle() {
        return `width: ${this._value}%`;
    }

    /**
     * The base class styles for the progrss bar
     * * @scope private
     * @returns {string}
     */
    get progressClasses() {
        const classes = ['slds-progress-bar'];

        if (this.size) {
            classes.push('slds-progress-bar_' + this.size);
        }

        if (this.variant === 'circular') {
            classes.push('slds-progress-bar_circular');
        }

        return classes.join(' ');
    }

    /**
     * The base class styles for the progrss bar value
     * * @scope private
     * @returns {string}
     */
    get progressValueClasses() {
        const classes = ['slds-progress-bar__value'];

        if (this.color === 'success') {
            classes.push('slds-progress-bar__value_success');
        }

        return classes.join(' ');
    }
}