/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v109.0.0
 */
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const ALLOWED_DOMAINS = new Set([
    'www.youtube.com',
    'player.vimeo.com',
    'play.vidyard.com',
    'players.brightcove.net',
    'bcove.video',
    'player.cloudinary.com',
    'fast.wistia.net',
    'i1.adis.ws',
    's1.adis.ws'
]);

export function hasOnlyAllowedVideoIframes(htmlString) {
    if (htmlString && htmlString.indexOf('<iframe') > -1) {
        const parsedHtml = new DOMParser().parseFromString(
            htmlString,
            'text/html'
        );

        const iframesList = Array.prototype.slice.call(
            parsedHtml.querySelectorAll('iframe')
        );

        return (
            iframesList.length > 0 &&
            !iframesList.some(iframe => !isUrlAllowed(iframe.src))
        );
    }
    return false;
}

function isUrlAllowed(url) {
    const anchor = document.createElement('a');
    anchor.href = url;

    return anchor.protocol === 'https:' && ALLOWED_DOMAINS.has(anchor.hostname);
}
