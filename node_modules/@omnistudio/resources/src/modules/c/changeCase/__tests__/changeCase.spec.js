/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v109.0.0
 */
import { snakeCase, camelCase, kebabCase } from 'c/changeCase';


describe('test changeCase', () => {

    it('snakeCase => snake_case', () => {
        expect(snakeCase('snakeCase')).toBe('snake_case');
    });

    it('camel_case => camelCase', () => {
        expect(camelCase('camel_case')).toBe('camelCase');
    });

    it('kebab_case => kebab-case', () => {
        expect(kebabCase('kebab_case')).toBe('kebab-case');
    });

    it('not a string returns null', () => {
        expect(kebabCase(1233)).toBe(1233);
    });

    it('Camel case => camelCase', () => {
        expect(camelCase('Camel case')).toBe('camelCase');
    });

    it(' camel casE => camelCase', () => {
        expect(camelCase(' camel casE')).toBe('camelCasE');
    });

    it('camel casE  => camelCase', () => {
        expect(camelCase('camel casE ')).toBe('camelCasE');
    });

    it('empty string', () => {
        expect(camelCase('')).toBe('');
    });

    it('null', () => {
        expect(camelCase(null)).toBe(null);
    });

    it('undefined', () => {
        expect(camelCase(undefined)).toBe(undefined);
    });

})