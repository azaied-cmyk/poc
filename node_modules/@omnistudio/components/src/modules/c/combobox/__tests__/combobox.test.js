/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import VlocityCombobox from "c/combobox";

describe("c-combobox", () => {
  afterEach(() => {
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  it("renders DOM elements", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "slds";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    expect(element.shadowRoot.children).not.toHaveLength(0);
  });

  /**
   * Check if the theme is applied properly
   */
  it("Check if theme is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "nds";
    element.placeholder = "Normal Input";
    element.readonly = true;
    element.value = "Apple";
    document.body.appendChild(element);
    const button = element.shadowRoot.querySelector("div");
    let index = button.className.indexOf("nds") !== -1 ? true : false;
    expect(index).toBe(true);
  });

  /* Check if the label  is set */
  it("Check If label is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    const label = element.shadowRoot.querySelector("label");
    expect(label.textContent).toBe("Single Select");
  });

  /* Check if the value  is set */
  it("Check If value is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    const input = element.shadowRoot.querySelector("input");
    expect(input.value).toBe("Apple");
  });

  /* Check if the placeholder  is set */
  it("Check If placeholder is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    const input = element.shadowRoot
      .querySelector("input")
      .getAttribute("placeholder");
    expect(input).toBe("Normal Input");
  });

  /* Check if the variant  is set */
  it("Check If variant is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    element.variant = "label-hidden";
    document.body.appendChild(element);
    const label = element.shadowRoot.querySelector("label");
    expect(label).toBe(null);
  });

  /* Check if the multiple is set */
  it("Check If multiple value is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Multi Select";
    element.multiple = true;
    element.theme = "slds";
    element.value = "Apple,Orange";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    const input = element.shadowRoot.querySelector("input");
    expect(input.value).toBe("2 Options Selected");
  });

  /* Check if the maxCount is set */
  it("Check If maxCount value is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.maxCount = 2;
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    let height = parseInt(2, 10) * 35 + "px";
    const list = element.shadowRoot.querySelector("ul");
    expect(list.style.maxHeight).toBe(height);
  });

  /* Check if readOnly disabled */
  it("Check If readOnly disabled", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.searchable = true;
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    expect(element.readOnly).toBe(false);
  });

  /* Check if fieldLevelHelp is set */
  it("Check If fieldLevelHelp is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.fieldLevelHelp = "Test Message";
    element.theme = "slds";
    element.value = "Apple";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    const toolTip = element.shadowRoot.querySelector("c-tooltip");
    expect(toolTip.content).toBe("Test Message");
  });

  /* Check if the required attribute is set */
  it("Check If required attribute is set", () => {
    const element = createElement("c-combobox", {
      is: VlocityCombobox
    });
    element.options = [
      {
        label: "Apple",
        value: "Apple"
      },
      {
        label: "Orange",
        value: "Orange"
      },
      {
        label: "Mango",
        value: "Mango"
      }
    ];
    element.label = "Single Select";
    element.required = true;
    element.theme = "slds";
    element.placeholder = "Normal Input";
    document.body.appendChild(element);
    expect(element.checkValidity()).toBe(false);
  });
});
