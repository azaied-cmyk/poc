/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import VlocityCheckboxGroup from "c/checkboxGroup";

describe("c-checkbox-group", () => {
  afterEach(() => {
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  it("renders DOM elements", () => {
    const element = createElement("c-checkbox-group", {
      is: VlocityCheckboxGroup
    });
    element.options = [
      {
        label: "Sales",
        value: "option1"
      },
      {
        label: "Force",
        value: "option2"
      }
    ];
    document.body.appendChild(element);
    expect(element.shadowRoot.children).not.toHaveLength(0);
  });

  /**
   * Check if the theme is applied properly
   */
  it("Check if theme is set", () => {
    const element = createElement("c-checkbox-group", {
      is: VlocityCheckboxGroup
    });
    element.theme = "slds";
    element.name = "tg1";
    element.options = [
      {
        label: "Sales",
        value: "option1"
      },
      {
        label: "Force",
        value: "option2"
      }
    ];
    element.label = "Select option";
    document.body.appendChild(element);
    const button = element.shadowRoot.querySelector("label");
    let index = button.className.indexOf("slds") !== -1 ? true : false;
    expect(index).toBe(true);
  });

  /* Check if the variant disabled */
  it("Check If label is set", () => {
    const element = createElement("c-checkbox-group", {
      is: VlocityCheckboxGroup
    });
    element.theme = "slds";
    element.name = "tg1";
    element.options = [
      {
        label: "Sales",
        value: "option1"
      },
      {
        label: "Force",
        value: "option2"
      }
    ];
    element.label = "Select option";
    document.body.appendChild(element);
    const label = element.shadowRoot.querySelector("fieldset").children[0];
    expect(label.textContent).toBe("Select option");
  });

  it("Check If change is triggered on set value", () => {
    const element = createElement("c-checkbox-group", {
      is: VlocityCheckboxGroup
    });
    element.options = [
      {
        label: "Sales",
        value: "option1"
      },
      {
        label: "Force",
        value: "option2"
      }
    ];
    element.label = "Select option";
    var verifyChangeEvent = "initialVlue";
    element.onchange = () => {
      element.label = "Value Changed";
      verifyChangeEvent = "initialValueChanged";
    };
    document.body.appendChild(element);
    element.value = "option2";
    expect(verifyChangeEvent).toBe("initialValueChanged");
  });
  it("Check If change is not triggered on set value", () => {
    const element = createElement("c-checkbox-group", {
      is: VlocityCheckboxGroup
    });
    element.options = [
      {
        label: "Sales",
        value: "option1"
      },
      {
        label: "Force",
        value: "option2"
      }
    ];
    element.label = "Select option";
    element.fireChangeOnSetValue = false;
    var verifyChangeEvent = "initialVlue";
    element.onchange = () => {
      element.label = "Value Changed";
      verifyChangeEvent = "initialValueChanged";
    };
    document.body.appendChild(element);
    element.value = "option2";
    expect(verifyChangeEvent).toBe("initialVlue");
  });
});
