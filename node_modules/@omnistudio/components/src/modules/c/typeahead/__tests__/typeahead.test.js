/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import Tag from "c/typeahead";
describe("c-typeahead", () => {
  describe("with data", () => {
    it("renders DOM elements", () => {
      const element = createElement("c-typeahead", { is: Tag });
      document.body.appendChild(element);
      expect(element.shadowRoot.children).not.toHaveLength(0);
    });
  });
  it("Has label", () => {
    const element = createElement("c-typeahead", {
      is: Tag
    });
    element.label = "Test label";
    document.body.appendChild(element);
    const label = element.shadowRoot.querySelector("label");
    expect(label.textContent).toBe("Test label");
  });
  it("Has Value Set", () => {
    expect.assertions(1);
    const element = createElement("c-typeahead", {
      is: Tag
    });
    element.records = ["a", "b"];
    element.value = "a";
    document.body.appendChild(element);
    return Promise.resolve().then(() => {
      const input = element.shadowRoot.querySelector("input");
      expect(input.value).toBe("a");
    });
  });
  it("fires change event when you select an element from the list", () => {
    expect.assertions(4);
    const element = createElement("c-typeahead", {
      is: Tag
    });
    element.theme = "slds";
    element.options = ["a", "b"];
    element.value = "a";
    element.disableFilter = true;
    document.body.appendChild(element);
    const input = element.shadowRoot.querySelector("input");
    return Promise.resolve()
      .then(() => {
        input.dispatchEvent(new CustomEvent("focus"));
      })
      .then(() => {
        const options = element.shadowRoot.querySelectorAll(
          ".slds-listbox__option"
        );
        expect(options.length).toBe(3);
        expect(
          options[0].querySelector(".slds-listbox__option-text").textContent
        ).toBe("a");
        expect(options[1].textContent).toBe("b");
        return new Promise(resolve => {
          element.addEventListener("change", function(event) {
            expect(event.detail.name).toBe("b");
            resolve();
          });
          options[1].dispatchEvent(new CustomEvent("click"));
        });
      });
  });
  it("fires change event only once when you select an element from the list AND blur", () => {
    expect.assertions(4);
    const element = createElement("c-typeahead", {
      is: Tag
    });
    element.theme = "slds";
    element.options = ["a", "b"];
    element.value = "a";
    element.disableFilter = true;
    document.body.appendChild(element);
    const input = element.shadowRoot.querySelector("input");
    return Promise.resolve()
      .then(() => {
        input.dispatchEvent(new CustomEvent("focus"));
      })
      .then(() => {
        const options = element.shadowRoot.querySelectorAll(
          ".slds-listbox__option"
        );
        expect(options.length).toBe(3);
        expect(
          options[0].querySelector(".slds-listbox__option-text").textContent
        ).toBe("a");
        expect(options[1].textContent).toBe("b");
        return new Promise(resolve => {
          element.addEventListener("change", function(event) {
            expect(event.detail.name).toBe("b");
            resolve();
          });
          options[1].dispatchEvent(new CustomEvent("click"));
          input.dispatchEvent(new CustomEvent("blur"));
        });
      });
  });
  describe("allowNewValues = true", () => {
    it("fires change event when you select an element from the list", () => {
      expect.assertions(4);
      const element = createElement("c-typeahead", {
        is: Tag
      });
      element.theme = "slds";
      element.options = ["a", "b"];
      element.value = "a";
      element.disableFilter = true;
      element.allowNewValues = true;
      document.body.appendChild(element);
      const input = element.shadowRoot.querySelector("input");
      return Promise.resolve()
        .then(() => {
          input.dispatchEvent(new CustomEvent("focus"));
        })
        .then(() => {
          const options = element.shadowRoot.querySelectorAll(
            ".slds-listbox__option"
          );
          expect(options.length).toBe(3);
          expect(
            options[0].querySelector(".slds-listbox__option-text").textContent
          ).toBe("a");
          expect(options[1].textContent).toBe("b");
          return new Promise(resolve => {
            element.addEventListener("change", function(event) {
              expect(event.detail.name).toBe("b");
              resolve();
            });
            options[1].dispatchEvent(new CustomEvent("click"));
          });
        });
    });
    it("fires change event only once when you select an element from the list AND blur", () => {
      expect.assertions(4);
      const element = createElement("c-typeahead", {
        is: Tag
      });
      element.theme = "slds";
      element.options = ["a", "b"];
      element.value = "a";
      element.disableFilter = true;
      element.allowNewValues = true;
      document.body.appendChild(element);
      const input = element.shadowRoot.querySelector("input");
      return Promise.resolve()
        .then(() => {
          input.dispatchEvent(new CustomEvent("focus"));
        })
        .then(() => {
          const options = element.shadowRoot.querySelectorAll(
            ".slds-listbox__option"
          );
          expect(options.length).toBe(3);
          expect(
            options[0].querySelector(".slds-listbox__option-text").textContent
          ).toBe("a");
          expect(options[1].textContent).toBe("b");
          return new Promise(resolve => {
            element.addEventListener("change", function(event) {
              expect(event.detail.name).toBe("b");
              resolve();
            });
            options[1].dispatchEvent(new CustomEvent("click"));
            input.dispatchEvent(new CustomEvent("blur"));
          });
        });
    });
    it("adds a new value when it doesn't exist", () => {
      expect.assertions(1);
      const element = createElement("c-typeahead", {
        is: Tag
      });
      element.theme = "slds";
      element.options = ["a", "b"];
      // element.value = "a";
      element.disableFilter = true;
      element.allowNewValues = true;
      document.body.appendChild(element);
      const input = element.shadowRoot.querySelector("input");
      return Promise.resolve()
        .then(() => {
          input.dispatchEvent(new CustomEvent("focus"));
        })
        .then(() => {
          input.value = "c";
          input.dispatchEvent(new CustomEvent("input"));
          return new Promise(resolve => {
            element.addEventListener("change", function(event) {
              expect(event.detail.name).toBe("c");
              resolve();
            });
            input.dispatchEvent(new CustomEvent("blur"));
          });
        });
    });
  });
});
