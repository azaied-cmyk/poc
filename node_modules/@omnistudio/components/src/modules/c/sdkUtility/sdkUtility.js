/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { sdkDataHandlerOut } from "./sdkDataHandlerOut";
import { DatasourceInputTypes } from "./datasourceInputTypesOut";
import { initializeDatasourceSdk, getSdkInstanceOut } from "./sdkInstanceOut";

/**
 * getDatahandlerOut is used to get the response data from sdk, it supports
 * different type of request input like soql, sosl, integration procedure, dataraptor e.t.c
 * @param {*} requestData
 * @return {*} promise which contains response data
 */
const getDatahandlerOut = requestData => {
  if (typeof requestData === "string") {
    try {
      requestData = JSON.parse(requestData);
    } catch (error) {
      throw new Error(error);
    }
  }
  return new Promise((resolve, reject) => {
    sdkDataHandlerOut(requestData)
      .then(result => {
        if (result) {
          const requestType = requestData.type.toLowerCase();
          if (DatasourceInputTypes.SOQL === requestType) {
            result = result.records || result;
          }
          if (DatasourceInputTypes.SOSL === requestType) {
            let objMap = {};
            result = result.searchRecords || result;
            for (let rec of result) {
              let type = rec.attributes ? rec.attributes.type : "";
              if (type) {
                objMap[type] = objMap[type] ? objMap[type] : [];
                objMap[type].push(rec);
              }
            }
            result = Object.keys(objMap).length === 0 ? result : objMap;
          }
        }
        resolve(result);
      })
      .catch(error => {
        reject(error);
      });
  });
};

/** @type {boolean}  This boolean represents this component is inside lwcoffplatformprojects folder which will be used for off-platform.*/
const isSalesforcePlatform = false;

export {
  initializeDatasourceSdk,
  getSdkInstanceOut,
  getDatahandlerOut,
  isSalesforcePlatform
};
