/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
const cmpFieldNotValid = "This field is not valid.";
const cmpDateFieldNotValid =
  "This field is not valid. Please use the format {0}.";
const cmpFieldValueMissing = "This field value is missing.";
const cmpPatternNoMatch = "The pattern does not match.";
const cmpRangeOverflowError = "Range overflow error.";
const cmpRangeUnderflowError = "Range underflow error.";
const cmpStepMismatchError = "Step mismatch error.";
const cmpFieldTooShort = "This field is too short.";
const cmpFieldTooLong = "This field is too long.";
const cmpTypeMismatchError = "Type mismatch error.";
const cmpRangeError = "Range Error";
const cmpSelectDate = "Select Date";
const cmpSelectTime = "Select Time";
const cmpRequired = "required";
const cmpValidations = "Validations";
const cmpUpload = "Upload";
const cmpDelete = "Delete";
const cmpDate = "Date";
const cmpTime = "Time";
const cmpInput = "Input";
const cmpInputElement = "Input Element";
const cmpVlocityInputElement = "Vlocity Input Element";
const cmpSLDSInputElement = "SLDS INPUT ELEMENTS";
const cmpCurrencyInput = "Currency Input";
const cmpInputMask = "Input Mask";
const cmpNormalInput = "Normal Input";
const cmpDisabledInput = "Disabled Input";
const cmpStaticInput = "Static Input";
const cmpPretextInput = "Pretext Input";
const cmpRequiredInput = "Required Input";
const cmpInputNumberRange = "Input number range";
const cmpCurrencyValue = "13101993";
const cmpInputValue = "123456";
const cmpInputHelpDescription = "Input help description.";
const cmpDateInput = "1993-10-13";
const cmpNumberExample = "ex: (415)111-2222";
const cmpInlineHelp = "Inline-help";
const cmpNumberExample1 = "12345678786543";
const cmpNumberExample2 = "1234";
const cmpNumberExample3 = "12";
const cmpStepValue = "0.01";
const cmpAcceptOnlyImage = "Accept only image";
const cmpInputWithIcon = "Input with Icon";
const cmpIcon = "Icon";
const cmpInputWithCheckbox = "Input with Checkbox";
const cmpShowHelp = "Show help";
const cmpInputWithMasks = "Inputs with Masks";
const cmpInputWithMasksExample1 = "1234567881";
const cmpInputWithMasksLabel1 = "Input with mask : (###) ###-####";
const cmpInputWithMasksPlaceholder1 = "Prepost text Input";
const cmpInputWithMasksExample2 = "-12345";
const cmpInputWithMasksLabel2 = "Input with mask : $###,###.000";
const cmpInputWithMasksInlineHelp2 = "ex: (415)111-2222";
const cmpInputWithMasksLabel3 = "Input with mask : ##â€™##";
const cmpInputWithMasksLabel4 = "Input with mask : $###'###,###.0000";
const cmpInputWithMasksLabel5 = "Input with mask : $###,###.0000 with range 9";
const cmpInputWithMasksLabel6 = "Input with mask : (###) ###-### with range 9";
const cmpInputWithMasksExample6 = "1234556789875433467";
const cmpInputWithMasksLabel7 = "Input with mask : $###,###.0000 with range 9";
const cmpInputWithMasksLabel8 = "Input with mask : $###,###.00";
const cmpInputWithMasksLabel9 = "Input with mask : $###,###.00% with range 4";
const cmpInputWithMasksLabel10 = "Input with mask : $#,###,##.000";
const cmpInputWithMasksLabel11 =
  "Input with mask : $###-###-#### with range 11";
const cmpInputWithMasksLabel12 = "Input with mask : !@$###.000 with range 11";
const cmpInputWithMasksLabel13 = "Input with mask : $### ###-##(###)";
const cmpInputWithMasksLabel14 = "Input with mask: +7(###)###-##-##";
const cmpInputWithMasksLabel15 = "Input with mask : ##.00% with range 4";
const cmpInputWithMasksLabel16 = "Input with mask : $### ###.##";
const cmpInputLabel1 = "Minimum 10 char";
const cmpInputLabel2 = "Max 10 char";
const cmpInputLabel3 = "Type error email";
const cmpInputLabel4 = "Pattern mismatch, no special char";
const cmpInputPlaceholder1 = "Pattern mismatch";
const cmpInputPlaceholder2 = "Step mismatch";
const cmpInputLabel5 = "overflow more then 50, underflow less then 10";
const cmpInputLabel6 = "Step Mismatch, enter odd number";

export {
  cmpFieldNotValid,
  cmpDateFieldNotValid,
  cmpFieldValueMissing,
  cmpPatternNoMatch,
  cmpRangeOverflowError,
  cmpRangeUnderflowError,
  cmpStepMismatchError,
  cmpFieldTooShort,
  cmpFieldTooLong,
  cmpTypeMismatchError,
  cmpRangeError,
  cmpSelectDate,
  cmpSelectTime,
  cmpRequired,
  cmpValidations,
  cmpUpload,
  cmpDelete,
  cmpDate,
  cmpTime,
  cmpInput,
  cmpInputElement,
  cmpVlocityInputElement,
  cmpSLDSInputElement,
  cmpCurrencyInput,
  cmpInputMask,
  cmpNormalInput,
  cmpDisabledInput,
  cmpStaticInput,
  cmpPretextInput,
  cmpRequiredInput,
  cmpInputNumberRange,
  cmpCurrencyValue,
  cmpInputValue,
  cmpInputHelpDescription,
  cmpDateInput,
  cmpNumberExample,
  cmpInlineHelp,
  cmpNumberExample1,
  cmpNumberExample2,
  cmpNumberExample3,
  cmpStepValue,
  cmpAcceptOnlyImage,
  cmpInputWithIcon,
  cmpIcon,
  cmpInputWithCheckbox,
  cmpShowHelp,
  cmpInputWithMasks,
  cmpInputWithMasksExample1,
  cmpInputWithMasksLabel1,
  cmpInputWithMasksPlaceholder1,
  cmpInputWithMasksExample2,
  cmpInputWithMasksLabel2,
  cmpInputWithMasksInlineHelp2,
  cmpInputWithMasksLabel3,
  cmpInputWithMasksLabel4,
  cmpInputWithMasksLabel5,
  cmpInputWithMasksExample6,
  cmpInputWithMasksLabel6,
  cmpInputWithMasksLabel7,
  cmpInputWithMasksLabel8,
  cmpInputWithMasksLabel9,
  cmpInputWithMasksLabel10,
  cmpInputWithMasksLabel11,
  cmpInputWithMasksLabel12,
  cmpInputWithMasksLabel13,
  cmpInputWithMasksLabel14,
  cmpInputWithMasksLabel15,
  cmpInputWithMasksLabel16,
  cmpInputLabel1,
  cmpInputLabel2,
  cmpInputLabel3,
  cmpInputLabel4,
  cmpInputPlaceholder1,
  cmpInputPlaceholder2,
  cmpInputLabel5,
  cmpInputLabel6
};
