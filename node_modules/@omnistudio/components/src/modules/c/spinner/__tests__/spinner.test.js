/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import VlocitySpinner from "c/spinner";

describe("c-spinner", () => {
  afterEach(() => {
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  it("renders DOM elements", () => {
    const element = createElement("c-spinner", {
      is: VlocitySpinner
    });
    element.theme = "slds";
    element.variant = "inverse";
    element.alternativeText = "loading";
    element.size = "medium";
    document.body.appendChild(element);
    expect(element.shadowRoot.children).not.toHaveLength(0);
  });

  /**
   * Check if the theme is applied properly
   */
  it("Check if theme is set", () => {
    const element = createElement("c-spinner", {
      is: VlocitySpinner
    });
    element.theme = "slds";
    element.variant = "inverse";
    element.alternativeText = "loading";
    element.size = "medium";
    document.body.appendChild(element);
    const button = element.shadowRoot.querySelector("div");
    let index = button.className.indexOf("slds") !== -1 ? true : false;
    expect(index).toBe(true);
  });

  /* Check if the variant is set */
  it("Check If variant is set", () => {
    const element = createElement("c-spinner", {
      is: VlocitySpinner
    });
    element.theme = "slds";
    element.variant = "inverse";
    element.alternativeText = "loading";
    element.size = "medium";
    document.body.appendChild(element);
    const div = element.shadowRoot.querySelector("div");
    let index =
      div.className.indexOf("slds-spinner_inverse") !== -1 ? true : false;
    expect(index).toBe(true);
  });

  /* Check if the alternativeText is set */
  it("Check If alternativeText is set", () => {
    const element = createElement("c-spinner", {
      is: VlocitySpinner
    });
    element.theme = "slds";
    element.variant = "inverse";
    element.alternativeText = "loading";
    element.size = "medium";
    document.body.appendChild(element);
    const span = element.shadowRoot.querySelector("span");
    expect(span.textContent).toBe("loading");
  });

  /* Check if the size is set */
  it("Check If size is set", () => {
    const element = createElement("c-spinner", {
      is: VlocitySpinner
    });
    element.theme = "slds";
    element.variant = "inverse";
    element.alternativeText = "loading";
    element.size = "medium";
    document.body.appendChild(element);
    const div = element.shadowRoot.querySelector("div");
    let index =
      div.className.indexOf("slds-spinner_medium") !== -1 ? true : false;
    expect(index).toBe(true);
  });
});
