/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import Modal from "c/modal";

describe("c-modal", () => {
  afterEach(() => {
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  it("renders DOM elements", () => {
    const element = createElement("c-modal", { is: Modal });
    document.body.appendChild(element);
    element.openModal();
    return Promise.resolve().then(() => {
      expect(element.shadowRoot.children).not.toHaveLength(0);
    });
  });

  it("changes theme", () => {
    const element = createElement("c-modal", {
      is: Modal
    });
    element.title = "Modal";
    element.theme = "nds";
    document.body.appendChild(element);
    element.openModal();
    //console.log(element.shadowRoot.querySelector("section"));
    return Promise.resolve().then(() => {
      expect(element.shadowRoot.querySelector("section").className).toContain("nds");
      expect(element.shadowRoot.querySelector("section").className).not.toContain("slds");
    });
  });

  it("opens modal", () => {
    const element = createElement("c-modal", {
      is: Modal
    });
    element.title = "Modal";
    document.body.appendChild(element);
    element.openModal();
    return Promise.resolve().then(() => {
      expect(element.shadowRoot.querySelector("section")).not.toBe(null);
    });
  });
});
